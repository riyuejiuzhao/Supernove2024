syntax = "proto3";

option go_package=".;miniRouterProto";

message InstanceInfo {
  string InstanceID = 1;
  string Host = 2;
  int32 Port = 3;
  int32 Weight = 4;
}

message ServiceInfo {
  string ServiceName = 1;
  int64 Revision = 2;
  repeated InstanceInfo Instances = 3;
}

message RegisterRequest{
  string ServiceName = 1;
  string Host = 2;
  int32 Port = 3;
  int32 Weight = 4; // 权重

  int64 TTL = 5; //上报时间间隔
}

message RegisterReply{
  string InstanceID = 1;
  bool Existed = 2;
}

message DeregisterRequest{
  string ServiceName =1;
  string InstanceID = 2;
  string Host = 3;
  int32 Port = 4;
}

message DeregisterReply{
}

service RegisterService{
  rpc Register(RegisterRequest) returns (RegisterReply){}
  rpc Deregister(DeregisterRequest) returns (DeregisterReply){}
}

message GetInstancesRequest{
  string ServiceName = 1;
  int64 Revision = 2;

  bool CheckHealth =3;
}

message GetInstancesReply{
  int64 Revision = 1;
  repeated InstanceInfo Instances = 2;
}

service DiscoveryService{
  rpc GetInstances(GetInstancesRequest) returns (GetInstancesReply){}
}

message HeartBeatRequest{
  string ServiceName =1;
  string InstanceID = 2;
}

message HeartBeatReply{
}

message HealthInfo{
  int64 TTL = 1;
  int64 LastHeartBeat = 2;
}

message GetHealthInfoRequest{
  string ServiceName = 1;
}

message GetHealthInfoReply{
  repeated HealthInfo HealthInfos = 1;
}

service HealthService{
  rpc HeartBeat(HeartBeatRequest) returns (HeartBeatReply) {}
  rpc GetHealthInfo(GetHealthInfoRequest) returns (GetHealthInfoReply){}
}

